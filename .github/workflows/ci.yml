name: CI

on:
  workflow_dispatch: {}
  push:
    # branches:
    #   - v1.70.2
    tags:
      - 'release/*'

jobs:
  windows:
    name: Windows
    runs-on: windows-2022
    timeout-minutes: 60
    env:
      CHILD_CONCURRENCY: "1"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TAG_NAME: ${{ github.ref_name }}  # 获取标签名或分支名
    steps:
      - uses: actions/checkout@v3

      - name: Set artifact name
        id: set-artifact-name
        run: |
          if ($env:TAG_NAME -like 'refs/tags/release/*') {
            $TAG_SUFFIX = $env:TAG_NAME -replace 'refs/tags/release/', ''
            echo "ARTIFACT_NAME=vscode-win32-x64(${TAG_SUFFIX})" >> $GITHUB_ENV
          } else {
            echo "ARTIFACT_NAME=vscode-win32-x64" >> $GITHUB_ENV
          }

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Cache Python installer
        id: cache-python-installer
        uses: actions/cache@v2
        with:
          path: python-2.7.18.amd64.msi
          key: ${{ runner.os }}-python-2.7.18-installer
          restore-keys: ${{ runner.os }}-python-2.7.18-installer

      - name: Download Python installer if not cached
        if: steps.cache-python-installer.outputs.cache-hit != 'true'
        run: |
          curl -o python-2.7.18.amd64.msi https://www.python.org/ftp/python/2.7.18/python-2.7.18.amd64.msi

      - name: Install Python 2.7
        run: |
          msiexec /i python-2.7.18.amd64.msi /quiet /qn /norestart
          echo "C:\Python27" >> $GITHUB_PATH
          echo "C:\Python27\Scripts" >> $GITHUB_PATH

      - name: Compute node modules cache key
        id: nodeModulesCacheKey
        run: echo "::set-output name=value::$(node build/azure-pipelines/common/computeNodeModulesCacheKey.js)"

      - name: Cache node_modules archive
        id: cacheNodeModules
        uses: actions/cache@v2
        with:
          path: ".build/node_modules_cache"
          key: "${{ runner.os }}-cacheNodeModulesArchive-${{ steps.nodeModulesCacheKey.outputs.value }}"

      - name: Extract node_modules archive
        if: ${{ steps.cacheNodeModules.outputs.cache-hit == 'true' }}
        run: 7z.exe x .build/node_modules_cache/cache.7z -aos

      - name: Get yarn cache directory path
        id: yarnCacheDirPath
        if: ${{ steps.cacheNodeModules.outputs.cache-hit != 'true' }}
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn directory
        if: ${{ steps.cacheNodeModules.outputs.cache-hit != 'true' }}
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarnCacheDirPath.outputs.dir }}
          key: ${{ runner.os }}-yarnCacheDir-${{ steps.nodeModulesCacheKey.outputs.value }}
          restore-keys: ${{ runner.os }}-yarnCacheDir-

      - name: Execute yarn
        if: ${{ steps.cacheNodeModules.outputs.cache-hit != 'true' }}
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
          ELECTRON_SKIP_BINARY_DOWNLOAD: 1
        run: yarn --frozen-lockfile --network-timeout 180000

      - name: Create node_modules archive
        if: ${{ steps.cacheNodeModules.outputs.cache-hit != 'true' }}
        run: |
          mkdir -Force .build
          node build/azure-pipelines/common/listNodeModules.js .build/node_modules_list.txt
          mkdir -Force .build/node_modules_cache
          7z.exe a .build/node_modules_cache/cache.7z -mx3 `@.build/node_modules_list.txt

      - name: Compile
        run: |
          yarn gulp vscode-win32-x64-min

      - name: Zip artifact
        run: |
            7z.exe a .build/vscode-win32-x64.zip ../VSCode-win32-x64 -mx9

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: vscode-win32-x64${{env.TAG_NAME}}
          path: .build/vscode-win32-x64.zip
